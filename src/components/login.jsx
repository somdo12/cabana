

import React, { useState } from 'react';
import '../css/login.css';
import { useNavigate } from 'react-router-dom';
import Axios from 'axios';
// import { API_BASE_URL } from '../config';

const Login = () => {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [showPassword, setShowPassword] = useState(false);
    const navigate = useNavigate();

    const handleSubmit = async (e) => {
        e.preventDefault();
        await checkAccount();
    };
    const checkAccount = async () => {
        try {
            const uri = `http://${window.location.hostname}:5000/v1/auth/sign-in`;

            const bodyData = {
                db_type: "mysql",
                store_code: "user_auth", // ‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö backend ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
                where: {
                    user_email: email,
                    user_password: password
                }
            };

            const headers = { "Content-Type": "application/json" };

            // üîç DEBUG: ‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ
            console.log("üöÄ Sending Login Request");
            console.log("URI:", uri);
            console.log("Body Data:", bodyData);

            // üî• ‡∏™‡πà‡∏á request
            const result = await Axios.post(uri, bodyData, { headers });

            // üîç DEBUG: ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å backend
            console.log("‚úÖ Response from API:", result);

            const user = result.data.data;
            console.log("üë§ Extracted User:", user);

            if (user) {
                const userData = {
                    id: user.user_id,
                    name: user.user_name,
                    role: user.user_role,
                    // status: user.user_status_id
                };

                // üóÉÔ∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á localStorage
                localStorage.setItem("user", JSON.stringify(userData));
                localStorage.setItem("userRole", user.user_role);
                localStorage.setItem("user_id", user.user_id);

                console.log("üéØ Logged in as:", user.user_role);

                // üîÄ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏° role
                if (user.user_role === "admin" || user.user_role === "staff") {
                    navigate("/admin/dashboard");
                } else {
                    navigate("/menu");
                }
            } else {
                console.warn("‚ùå User not found or invalid credentials.");
                alert("üìõ ‡∫≠‡∫µ‡ªÄ‡∫°‡∫ß ‡∫´‡∫º‡∫∑ ‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô‡∫ö‡ªç‡ªà‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á!");
            }
        } catch (error) {
            console.error("üî• Login Error:", error);

            // ‡∏•‡∏≠‡∏á log ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å response ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            if (error.response) {
                console.error("üîé API Response Error:", error.response.data);
            }

            alert("‚ùå ‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡∫Ç‡∫±‡∫î‡∫Ç‡ªâ‡∫≠‡∫á");
        }
    };


    return (
        <div className="login-container">
            <form onSubmit={handleSubmit} className="login-form">
                <h2 className="login-title">‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫•‡∫∞‡∫ö‡∫ª‡∫ö‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫™‡∫π‡ªà Cabana</h2>

                <label>‡∫≠‡∫µ‡ªÄ‡∫°‡∫ß</label>
                <input
                    type="email"
                    placeholder="‡ªÉ‡∫™‡ªà‡∫≠‡∫µ‡ªÄ‡∫°‡∫ß"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                />

                <label>‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô</label>
                <div className="password-wrapper">
                    <input
                        type={showPassword ? "text" : "password"}
                        placeholder="‡ªÉ‡∫™‡ªà‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        required
                    />
                    <button
                        type="button"
                        className="toggle-button"
                        onClick={() => setShowPassword(!showPassword)}
                    >
                        {showPassword ? "‡ªÄ‡∫ä‡∫∑‡ªà‡∫≠‡∫á‡∫•‡∫∞‡∫´‡∫±‡∫î" : "‡ªÄ‡∫ö‡∫¥‡ªà‡∫á‡∫•‡∫∞‡∫´‡∫±‡∫î"}
                    </button>
                </div>

                <button type="submit" className="login-btn">‡ªÄ‡∫Ç‡∫ª‡ªâ‡∫≤‡∫•‡∫∞‡∫ö‡∫ª‡∫ö</button>
            </form>
        </div>
    );
};

export default Login;
