import React, { useState } from "react";
import Axios from "axios";
import { FaCoffee } from "react-icons/fa";
import { useNavigate } from "react-router-dom";
import { ENDPOINTS } from "../config"; // ‚úÖ ‡πÉ‡∏ä‡πâ ENDPOINTS
import { HOSTNAME } from "../config";

import "../css/register.css";

const RegisterForm = () => {
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        // password: "", ‡∫ö‡ªà‡∫≠‡∫ô‡∫ô‡∫µ‡ªâ1
        secretword: ""
    });

    const currentUser = JSON.parse(localStorage.getItem("user")); // ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô/‡∏™‡∏ï‡∏≤‡∏ü‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    const navigate = useNavigate();
    console.log("currentUser:", currentUser);

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            const bodyData = {
                db_type: "mysql",
                store_code: "user_privacy",
                set: {
                    email: formData.email,
                    user_name: formData.name,
                    // secretword: formData.password,
                    secretword: formData.secretword,
                    user_role: "staff", // ‡πÉ‡∏´‡πâ default ‡πÄ‡∏õ‡πá‡∏ô staff
                },
            };
            // const result = await Axios.post(ENDPOINTS.CREATE, bodyData);
            const result = await Axios.post(`http://${HOSTNAME}:5000/v1/auth/sign-up`, bodyData);
            
            
            
            console.log("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", result.data);
            

            // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log
            const logPayload = {
                db_type: "mysql",
                store_code: "user_activity_log",
                set: {
                    action: `‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ: ${formData.name}`,
                    performed_by: currentUser?.name || "System",
                    performed_at: new Date().toISOString(),
                    performed_role: currentUser?.role,
                    target_user_id: currentUser?.id,
                },
            };
            await Axios.post(ENDPOINTS.CREATE, logPayload);
            



            alert("‡∫•‡∫ª‡∫á‡∫ó‡∫∞‡∫ö‡∫Ω‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡ªÅ‡∫•‡ªâ‡∫ß!");

            // setFormData({ name: "", email: "", password: "" });
            setFormData({ name: "", email: "", secretword: "" });
            navigate("/admin/users");
        } catch (error) {
            console.error("Error :", error);
            alert("‚ùå ‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ‡ªÑ‡∫î‡ªâ");
        }
    };

    return (
        <div className="register-wrapper">
            <form onSubmit={handleSubmit} className="form-container">
                <FaCoffee />
                <h2>‡∫•‡∫ª‡∫á‡∫ó‡∫∞‡∫ö‡∫Ω‡∫ô</h2>
                <p>‡∫•‡∫ª‡∫á‡∫ó‡∫∞‡∫ö‡∫Ω‡∫ô‡ªÄ‡∫û‡∫∑‡ªà‡∫≠‡ªÉ‡∫ä‡ªâ‡∫ö‡ªç‡∫•‡∫¥‡∫Å‡∫≤‡∫ô‡∫Å‡∫±‡∫ö‡∫Æ‡ªâ‡∫≤‡∫ô‡∫Ç‡∫≠‡∫á‡∫û‡∫ß‡∫Å‡ªÄ‡∫Æ‡∫ª‡∫≤</p>

                <input
                    type="text"
                    name="name"
                    placeholder="‡∫ä‡∫∑‡ªà-‡∫ô‡∫≤‡∫°‡∫™‡∫∞‡∫Å‡∫∏‡∫ô"
                    value={formData.name}
                    onChange={handleChange}
                    required
                />

                <input
                    type="email"
                    name="email"
                    placeholder="‡∫≠‡∫µ‡ªÄ‡∫°‡∫ß"
                    value={formData.email}
                    onChange={handleChange}
                    required
                />

                <input
                    type="password"
                    // name="password" ‡∫ö‡ªà‡∫≠‡∫ô3
                    name="secretword"
                    placeholder="‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô"
                    // value={formData.password} ‡∫ö‡ªà‡∫≠‡∫ô2
                    value={formData.secretword}
                    onChange={handleChange}
                    required
                />

                <button type="submit">‡∫•‡∫ª‡∫á‡∫ó‡∫∞‡∫ö‡∫Ω‡∫ô</button>
            </form>
        </div>
    );
};

export default RegisterForm;

// ‡ªÉ‡∫ä‡ªâ‡∫á‡∫≤‡∫ô‡ªÑ‡∫î‡ªâ ‡∫°‡∫∑‡ªâ‡∫Ñ‡∫∑‡∫ô‡∫µ‡∫ô‡∫µ‡ªâ 24/4/2025

//  import React, { useState } from "react";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";
// import { HOSTNAME } from "../config";


// // import "../css/RegisterForm.css"; 

// function Register() {
//     const [formData, setFormData] = useState({
//         user_name: "",
//         email: "",
//         secretword: ""
//     });

//     const navigate = useNavigate();

//     const handleChange = (e) => {
//         setFormData({ ...formData, [e.target.name]: e.target.value });
//     };

//     const handleSubmit = async (e) => {
//         e.preventDefault();
//         try {
//             const payload = {
//                 db_type: "mysql",
//                 store_code: "user_privacy",
//                 set: formData
//             };

//             await axios.post(`http://${HOSTNAME}:5000/v1/auth/sign-up`, payload);

//             alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
//             navigate("/admin/users"); 

//         } catch (error) {
//             console.error("‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
//         }
//     };

//     return (
//         <div className="register-container">
//             <h2>üìù ‡∫•‡∫ª‡∫á‡∫ó‡∫∞‡∫ö‡∫Ω‡∫ô‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ‡ªÉ‡ªù‡ªà</h2>
//             <form onSubmit={handleSubmit} className="register-form">
//                 <label>‡∫ä‡∫∑‡ªà‡∫ú‡∫π‡ªâ‡ªÉ‡∫ä‡ªâ</label>
//                 <input
//                     type="text"
//                     name="user_name"
//                     value={formData.user_name}
//                     onChange={handleChange}
//                     required
//                 />
//                 <label>‡∫≠‡∫µ‡ªÄ‡∫°‡∫ß</label>
//                 <input
//                     type="email"
//                     name="email"
//                     value={formData.email}
//                     onChange={handleChange}
//                     required
//                 />
//                 <label>‡∫•‡∫∞‡∫´‡∫±‡∫î‡∫ú‡ªà‡∫≤‡∫ô</label>
//                 <input
//                     type="password"
//                     name="secretword"
//                     value={formData.secretword}
//                     onChange={handleChange}
//                     required
//                 />
//                 <button type="submit">‚úÖ ‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å</button>
//             </form>
//         </div>
//     );
// }

// export default Register;  