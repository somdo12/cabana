
import React, { useEffect, useState } from "react";
import axios from "axios";
import { ENDPOINTS } from "../../config";
import "../../css/AdminActivityLog.css";

const AdminActivityLog = () => {
    const [logs, setLogs] = useState([]);
    const [loading, setLoading] = useState(true);

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡πÄ‡∏ß‡∏•‡∏≤
    const formatDateTime = (datetime) => {
        const date = new Date(datetime);
        if (isNaN(date)) return datetime; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ parse ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°

        const pad = (n) => (n < 10 ? "0" + n : n);
        return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;
    };

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• log
    const fetchLogs = async () => {
        try {
            const bodyData = {
                db_type: "mysql",
                store_code: "user_activity_log",
                field_list: "*",
                where: "*",
            };
            const response = await axios.post(ENDPOINTS.FETCH, bodyData);
            setLogs(response.data.data || []);
        } catch (error) {
            console.error("‚ùå ‡∫î‡∫∂‡∫á log ‡∫ú‡∫¥‡∫î‡∫û‡∫≤‡∫î:", error.response || error);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchLogs();
    }, []);

    return (
        <div className="activity-log-container">
            <h2>üìú ‡∫õ‡∫∞‡∫´‡∫ß‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫à‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫û‡∫∞‡∫ô‡∫±‡∫Å‡∫á‡∫≤‡∫ô</h2>
            {loading ? (
                <p>‚è≥ ‡∫Å‡∫≥‡∫•‡∫±‡∫á‡ªÇ‡∫´‡∫º‡∫î...</p>
            ) : logs.length > 0 ? (
                <table className="activity-log-table">
                    <thead>
                        <tr>
                            <th>‡∫•‡∫∞‡∫´‡∫±‡∫î</th>
                            <th>‡∫Å‡∫≤‡∫ô‡∫Å‡∫∞‡∫ó‡∫≥</th>
                            <th>‡ªÇ‡∫î‡∫ç</th>
                            <th>‡∫ö‡∫ª‡∫î‡∫ö‡∫≤‡∫î</th>
                            <th>Target ID</th>
                            <th>‡∫ß‡∫±‡∫ô‡ªÄ‡∫ß‡∫•‡∫≤</th>
                        </tr>
                    </thead>
                    <tbody>
                        {logs.map((log) => (
                            <tr key={log.log_id}>
                                <td>{log.log_id}</td>
                                <td>{log.action}</td>
                                <td>{log.performed_by}</td>
                                <td>{log.performed_role}</td>
                                <td>{log.target_user_id}</td>
                                <td>{formatDateTime(log.performed_at)}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            ) : (
                <p>‚ùå ‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô log</p>
            )}
        </div>
    );
};

export default AdminActivityLog;
